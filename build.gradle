buildscript
{
	repositories
	{
		maven
		{
			url = "https://files.minecraftforge.net/maven"
		}
		jcenter()
		mavenCentral()
		maven
		{
			url = 'https://repo.spongepowered.org/repository/maven-public/'
		}
	}
	dependencies
	{
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '2.5.3'
group = 'melonslise.locks'
archivesBaseName = 'locks'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft
{
	mappings channel: 'snapshot', version: '20200707-1.16.1'

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs
	{
		client
		{
			workingDirectory project.file('run')

			arg "-mixin.config=" + archivesBaseName + ".mixins.json"

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			property 'forge.logging.console.level', 'info'

			mods
			{
				locks
				{
					source sourceSets.main
				}
			}
		}

		server
		{
			workingDirectory project.file('run')

			arg "-mixin.config=" + archivesBaseName + ".mixins.json"

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			property 'forge.logging.console.level', 'info'

			mods
			{
				locks
				{
					source sourceSets.main
				}
			}
		}

		data
		{
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			property 'forge.logging.console.level', 'info'

			args '--mod', 'locks', '--all', '--output', file('src/generated/resources/')

			mods
			{
				locks
				{
					source sourceSets.main
				}
			}
		}
	}
}

dependencies
{
	minecraft 'net.minecraftforge:forge:1.16.2-33.0.21'
}

jar
{
	manifest
	{
		attributes([
			"Specification-Title": archivesBaseName,
			"Specification-Vendor": "melonslise",
			"Specification-Version": version,
			"Implementation-Title": archivesBaseName,
			"Implementation-Version": version,
			"Implementation-Vendor" :"melonslise",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"MixinConfigs": archivesBaseName + ".mixins.json"
		])
	}
}

apply plugin: 'org.spongepowered.mixin'

mixin
{
	add sourceSets.main, archivesBaseName + ".refmap.json"
}
